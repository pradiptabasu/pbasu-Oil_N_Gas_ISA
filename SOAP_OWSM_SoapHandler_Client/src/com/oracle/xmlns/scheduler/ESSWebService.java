
package com.oracle.xmlns.scheduler;

import java.util.List;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;

import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import com.oracle.xmlns.scheduler.types.AsyncStatus;
import com.oracle.xmlns.scheduler.types.MetadataObjectId;
import com.oracle.xmlns.scheduler.types.NlsOptions;
import com.oracle.xmlns.scheduler.types.PostProcessAction;
import com.oracle.xmlns.scheduler.types.RequestDetail;
import com.oracle.xmlns.scheduler.types.RequestExecutionContext;
import com.oracle.xmlns.scheduler.types.RequestParameters;
import com.oracle.xmlns.scheduler.types.State;
import com.oracle.xmlns.scheduler.types.StepArgs;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 *
 */
@WebService(name = "ESSWebService", targetNamespace = "http://xmlns.oracle.com/scheduler")
@XmlSeeAlso({ com.oracle.xmlns.scheduler.ObjectFactory.class, com.oracle.xmlns.scheduler.types.ObjectFactory.class })
public interface ESSWebService {


    /**
     *
     * @param jobDefinitionId
     * @param application
     * @param description
     * @param requestedStartTime
     * @param requestParameters
     * @return
     *     returns long
     * @throws ValidationException_Exception
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "submitRequest")
    @WebResult(name = "requestId", targetNamespace = "")
    @RequestWrapper(localName = "submitRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SubmitRequest")
    @ResponseWrapper(localName = "submitRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SubmitRequestResponse")
    public long submitRequest(@WebParam(name = "description", targetNamespace = "http://xmlns.oracle.com/scheduler")
                              String description,
                              @WebParam(name = "jobDefinitionId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                              MetadataObjectId jobDefinitionId,
                              @WebParam(name = "application", targetNamespace = "http://xmlns.oracle.com/scheduler")
                              String application,
                              @WebParam(name = "requestedStartTime",
                                        targetNamespace = "http://xmlns.oracle.com/scheduler")
                              XMLGregorianCalendar requestedStartTime,
                              @WebParam(name = "requestParameters",
                                        targetNamespace = "http://xmlns.oracle.com/scheduler")
                              RequestParameters requestParameters) throws NotFoundException_Exception,
                                                                          RuntimeServiceException_Exception,
                                                                          ValidationException_Exception;

    /**
     *
     * @param jobDefinitionId
     * @param application
     * @param scheduleId
     * @param description
     * @param requestedEndTime
     * @param triggerId
     * @param requestedStartTime
     * @param requestParameters
     * @return
     *     returns long
     * @throws ValidationException_Exception
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "submitRecurringRequest")
    @WebResult(name = "requestId", targetNamespace = "")
    @RequestWrapper(localName = "submitRecurringRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SubmitRecurringRequest")
    @ResponseWrapper(localName = "submitRecurringRequestResponse",
                     targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SubmitRecurringRequestResponse")
    public long submitRecurringRequest(@WebParam(name = "description",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       String description,
                                       @WebParam(name = "jobDefinitionId",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       MetadataObjectId jobDefinitionId,
                                       @WebParam(name = "scheduleId",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       MetadataObjectId scheduleId,
                                       @WebParam(name = "triggerId",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       MetadataObjectId triggerId,
                                       @WebParam(name = "application",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       String application,
                                       @WebParam(name = "requestedStartTime",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       XMLGregorianCalendar requestedStartTime,
                                       @WebParam(name = "requestedEndTime",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       XMLGregorianCalendar requestedEndTime,
                                       @WebParam(name = "requestParameters",
                                                 targetNamespace = "http://xmlns.oracle.com/scheduler")
                                       RequestParameters requestParameters) throws NotFoundException_Exception,
                                                                                   RuntimeServiceException_Exception,
                                                                                   ValidationException_Exception;

    /**
     *
     * @param requestId
     */
    @WebMethod(action = "getCompletionStatus")
    @Oneway
    @RequestWrapper(localName = "getCompletionStatus", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.GetCompletionStatus")
    public void getCompletionStatus(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                                    long requestId);

    /**
     *
     * @param requestId
     * @return
     *     returns com.oracle.xmlns.scheduler.types.State
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "getRequestState")
    @WebResult(name = "state", targetNamespace = "")
    @RequestWrapper(localName = "getRequestState", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.GetRequestState")
    @ResponseWrapper(localName = "getRequestStateResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.GetRequestStateResponse")
    public State getRequestState(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                                 long requestId) throws NotFoundException_Exception, RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestDetail
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "getRequestDetail")
    @WebResult(name = "requestDetail", targetNamespace = "")
    @RequestWrapper(localName = "getRequestDetail", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.GetRequestDetail")
    @ResponseWrapper(localName = "getRequestDetailResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.GetRequestDetailResponse")
    public RequestDetail getRequestDetail(@WebParam(name = "requestId",
                                                    targetNamespace = "http://xmlns.oracle.com/scheduler")
                                          long requestId) throws NotFoundException_Exception,
                                                                 RuntimeServiceException_Exception;

    /**
     *
     * @param requestExecutionContext
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestExecutionContext
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "getRequestExecutionContext")
    @WebResult(name = "requestExecutionContext", targetNamespace = "")
    @RequestWrapper(localName = "getRequestExecutionContext", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.GetRequestExecutionContext")
    @ResponseWrapper(localName = "getRequestExecutionContextResponse",
                     targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.GetRequestExecutionContextResponse")
    public RequestExecutionContext getRequestExecutionContext(@WebParam(name = "requestExecutionContext",
                                                                        targetNamespace =
                                                                        "http://xmlns.oracle.com/scheduler")
                                                              String requestExecutionContext) throws NotFoundException_Exception,
                                                                                                     RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     * @throws IllegalStateException_Exception
     * @throws NotAllowedException_Exception
     */
    @WebMethod(action = "holdRequest")
    @RequestWrapper(localName = "holdRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.HoldRequest")
    @ResponseWrapper(localName = "holdRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.HoldRequestResponse")
    public void holdRequest(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                            long requestId) throws IllegalStateException_Exception, NotAllowedException_Exception,
                                                   NotFoundException_Exception, RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @throws NotFoundException_Exception
     * @throws IllegalStateException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "releaseRequest")
    @RequestWrapper(localName = "releaseRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.ReleaseRequest")
    @ResponseWrapper(localName = "releaseRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.ReleaseRequestResponse")
    public void releaseRequest(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                               long requestId) throws IllegalStateException_Exception, NotFoundException_Exception,
                                                      RuntimeServiceException_Exception;

    /**
     *
     * @param requestExecutionContext
     * @param status
     * @param statusMessage
     * @throws RuntimeServiceException_Exception
     * @throws RequestNotFoundException_Exception
     */
    @WebMethod(action = "setAsyncRequestStatus")
    @RequestWrapper(localName = "setAsyncRequestStatus", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SetAsyncRequestStatus")
    @ResponseWrapper(localName = "setAsyncRequestStatusResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SetAsyncRequestStatusResponse")
    public void setAsyncRequestStatus(@WebParam(name = "requestExecutionContext",
                                                targetNamespace = "http://xmlns.oracle.com/scheduler")
                                      String requestExecutionContext,
                                      @WebParam(name = "status", targetNamespace = "http://xmlns.oracle.com/scheduler")
                                      AsyncStatus status,
                                      @WebParam(name = "statusMessage",
                                                targetNamespace = "http://xmlns.oracle.com/scheduler")
                                      String statusMessage) throws RequestNotFoundException_Exception,
                                                                   RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @throws NotFoundException_Exception
     * @throws IllegalStateException_Exception
     * @throws RuntimeServiceException_Exception
     */
    @WebMethod(action = "cancelRequest")
    @RequestWrapper(localName = "cancelRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.CancelRequest")
    @ResponseWrapper(localName = "cancelRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.CancelRequestResponse")
    public void cancelRequest(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                              long requestId) throws IllegalStateException_Exception, NotFoundException_Exception,
                                                     RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @throws NotFoundException_Exception
     * @throws IllegalStateException_Exception
     * @throws RuntimeServiceException_Exception
     * @throws NotAllowedException_Exception
     */
    @WebMethod(action = "deleteRequest")
    @RequestWrapper(localName = "deleteRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.DeleteRequest")
    @ResponseWrapper(localName = "deleteRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.DeleteRequestResponse")
    public void deleteRequest(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                              long requestId) throws IllegalStateException_Exception, NotAllowedException_Exception,
                                                     NotFoundException_Exception, RuntimeServiceException_Exception;

    /**
     *
     * @param requestId
     * @throws NotFoundException_Exception
     * @throws RuntimeServiceException_Exception
     * @throws IllegalStateException_Exception
     * @throws NotAllowedException_Exception
     */
    @WebMethod(action = "purgeRequest")
    @RequestWrapper(localName = "purgeRequest", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.PurgeRequest")
    @ResponseWrapper(localName = "purgeRequestResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.PurgeRequestResponse")
    public void purgeRequest(@WebParam(name = "requestId", targetNamespace = "http://xmlns.oracle.com/scheduler")
                             long requestId) throws IllegalStateException_Exception, NotAllowedException_Exception,
                                                    NotFoundException_Exception, RuntimeServiceException_Exception;

    /**
     *
     * @param arguments
     * @param requestParameters
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestParameters
     * @throws IllegalArgumentException_Exception
     */
    @WebMethod(action = "setSubmitArgs")
    @WebResult(name = "requestParametersReturn", targetNamespace = "")
    @RequestWrapper(localName = "setSubmitArgs", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SetSubmitArgs")
    @ResponseWrapper(localName = "setSubmitArgsResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SetSubmitArgsResponse")
    public RequestParameters setSubmitArgs(@WebParam(name = "requestParameters",
                                                     targetNamespace = "http://xmlns.oracle.com/scheduler")
                                           RequestParameters requestParameters,
                                           @WebParam(name = "arguments",
                                                     targetNamespace = "http://xmlns.oracle.com/scheduler")
                                           List<String> arguments) throws IllegalArgumentException_Exception;

    /**
     *
     * @param stepArgsList
     * @param requestParameters
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestParameters
     * @throws IllegalArgumentException_Exception
     */
    @WebMethod(action = "setStepsArgs")
    @WebResult(name = "requestParametersReturn", targetNamespace = "")
    @RequestWrapper(localName = "setStepsArgs", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SetStepsArgs")
    @ResponseWrapper(localName = "setStepsArgsResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SetStepsArgsResponse")
    public RequestParameters setStepsArgs(@WebParam(name = "requestParameters",
                                                    targetNamespace = "http://xmlns.oracle.com/scheduler")
                                          RequestParameters requestParameters,
                                          @WebParam(name = "stepArgsList",
                                                    targetNamespace = "http://xmlns.oracle.com/scheduler")
                                          List<StepArgs> stepArgsList) throws IllegalArgumentException_Exception;

    /**
     *
     * @param postProcessActions
     * @param requestParameters
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestParameters
     * @throws IllegalArgumentException_Exception
     */
    @WebMethod(action = "addPPActions")
    @WebResult(name = "requestParametersReturn", targetNamespace = "")
    @RequestWrapper(localName = "addPPActions", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.AddPPActions")
    @ResponseWrapper(localName = "addPPActionsResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.AddPPActionsResponse")
    public RequestParameters addPPActions(@WebParam(name = "requestParameters",
                                                    targetNamespace = "http://xmlns.oracle.com/scheduler")
                                          RequestParameters requestParameters,
                                          @WebParam(name = "postProcessActions",
                                                    targetNamespace = "http://xmlns.oracle.com/scheduler")
                                          List<PostProcessAction> postProcessActions) throws IllegalArgumentException_Exception;

    /**
     *
     * @param nlsOptions
     * @param requestParameters
     * @return
     *     returns com.oracle.xmlns.scheduler.types.RequestParameters
     * @throws IllegalArgumentException_Exception
     */
    @WebMethod(action = "setNLSOptions")
    @WebResult(name = "requestParametersReturn", targetNamespace = "")
    @RequestWrapper(localName = "setNLSOptions", targetNamespace = "http://xmlns.oracle.com/scheduler",
                    className = "com.oracle.xmlns.scheduler.SetNLSOptions")
    @ResponseWrapper(localName = "setNLSOptionsResponse", targetNamespace = "http://xmlns.oracle.com/scheduler",
                     className = "com.oracle.xmlns.scheduler.SetNLSOptionsResponse")
    public RequestParameters setNLSOptions(@WebParam(name = "requestParameters",
                                                     targetNamespace = "http://xmlns.oracle.com/scheduler")
                                           RequestParameters requestParameters,
                                           @WebParam(name = "nlsOptions",
                                                     targetNamespace = "http://xmlns.oracle.com/scheduler")
                                           NlsOptions nlsOptions) throws IllegalArgumentException_Exception;

}
