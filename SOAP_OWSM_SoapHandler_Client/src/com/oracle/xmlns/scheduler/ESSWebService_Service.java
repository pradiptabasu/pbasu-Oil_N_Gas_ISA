
package com.oracle.xmlns.scheduler;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "ESSWebService", targetNamespace = "http://xmlns.oracle.com/scheduler",
                  wsdlLocation =
                  "http://oa8066.us.oracle.com:7003/ess/esswebservice?wsdl#%7Bhttp%3A%2F%2Fxmlns.oracle.com%2Fscheduler%7DESSWebService")
@HandlerChain(file="./handler.xml")
public class ESSWebService_Service extends Service {

    private final static URL ESSWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException ESSWEBSERVICE_EXCEPTION;
    private final static QName ESSWEBSERVICE_QNAME = new QName("http://xmlns.oracle.com/scheduler", "ESSWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("http://oa8066.us.oracle.com:7003/ess/esswebservice?wsdl#%7Bhttp%3A%2F%2Fxmlns.oracle.com%2Fscheduler%7DESSWebService");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ESSWEBSERVICE_WSDL_LOCATION = url;
        ESSWEBSERVICE_EXCEPTION = e;
    }

    public ESSWebService_Service() {
        super(__getWsdlLocation(), ESSWEBSERVICE_QNAME);
    }

    public ESSWebService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), ESSWEBSERVICE_QNAME, features);
    }

    public ESSWebService_Service(URL wsdlLocation) {
        super(wsdlLocation, ESSWEBSERVICE_QNAME);
    }

    public ESSWebService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ESSWEBSERVICE_QNAME, features);
    }

    public ESSWebService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ESSWebService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ESSWebService
     */
    @WebEndpoint(name = "SchedulerServiceImplPort")
    public ESSWebService getSchedulerServiceImplPort() {
        return super.getPort(new QName("http://xmlns.oracle.com/scheduler", "SchedulerServiceImplPort"),
                             ESSWebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ESSWebService
     */
    @WebEndpoint(name = "SchedulerServiceImplPort")
    public ESSWebService getSchedulerServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.oracle.com/scheduler", "SchedulerServiceImplPort"),
                             ESSWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ESSWEBSERVICE_EXCEPTION != null) {
            throw ESSWEBSERVICE_EXCEPTION;
        }
        return ESSWEBSERVICE_WSDL_LOCATION;
    }

}
